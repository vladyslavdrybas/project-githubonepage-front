services:
  web:
    container_name: ${PROJECT_NAME:-solo}-${SERVICE_NAME:-service}-api-${API_VERSION:-1.0}-web-${APP_ENV:-none}
    image: vd_${PROJECT_NAME:-solo}_${SERVICE_NAME:-service}_spa_${APP_ENV:-none}:${API_VERSION:-1.0}
    build:
      context: .
      dockerfile: ./Dockerfile
      target: nginx_server
      args:
        APP_ENV: ${APP_ENV}
        NODE_ENV: ${APP_ENV}
    env_file:
      - .env
    networks:
      - proxy_network
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-http.rule=Host(`${HOST}`) && PathPrefix(`${NEXT_PUBLIC_URL}`)"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-https.rule=Host(`${HOST}`) && PathPrefix(`${NEXT_PUBLIC_URL}`)"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-https.tls.domains[0].main=${HOST}"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-http.entrypoints=web"
      - "traefik.http.middlewares.${PROJECT_NAME}-${SERVICE_NAME}-https.redirectscheme.scheme=https"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-https.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-https.tls=true"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-http.middlewares=${PROJECT_NAME}-${SERVICE_NAME}-https"
      - "traefik.http.middlewares.${PROJECT_NAME}-${SERVICE_NAME}-apiprefix.stripprefixregex.regex=${NEXT_PUBLIC_URL}"
      - "traefik.http.routers.${PROJECT_NAME}-${SERVICE_NAME}-https.middlewares=${PROJECT_NAME}-${SERVICE_NAME}-apiprefix"
    volumes:
      - ./tmp/log/nginx/:/var/log/nginx

networks:
  proxy_network:
    name: ${PROXY_NETWORK}
    external: true
  default:
    name: ${APP_NETWORK}
    external: true
